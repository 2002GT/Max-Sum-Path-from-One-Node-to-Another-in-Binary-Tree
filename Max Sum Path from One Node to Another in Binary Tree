// -------------------Max Sum Path from One Node to Another in Binary Tree

#include "bits/stdc++.h"
using namespace std;

  struct Node{
      int data;
      struct Node*left;
      struct Node*right;
      
//   CONSTRUCTOR----    
      Node(int val){
      data = val;
      left =NULL;
      right = NULL;
  }
};
 
//  -------------------------------------------------------------------
 int max_path_sum_utill(Node*root, int &ans){
     if(root == NULL){
         return 0;
     }
int left = max_path_sum_utill(root->left,ans);
int right = max_path_sum_utill(root->right,ans);
   int node_max = max(max(root->data,root->data+ left+ right),max(root->data+left, root->data+right));
   
  ans =  max(ans, node_max);
 int single_path_sum = max(root->data, max(root->data,+left , root->data + right));
   return single_path_sum;
 }

 int max_path_sum(Node*root){
     int ans = INT_MIN;
     max_path_sum_utill(root, ans);
     return ans;
 }
      
     
         


int main()
{
    struct Node* root= new Node(1);
    root->left = new Node(2);
    root->right= new Node(3);
    root->left->left = new Node(4)  ;
      root-> left->right = new Node(5);
      
//   ----------- FUNCTION CALLING------
      cout<<max_path_sum(root);
        
    return 0;
}
